services:
  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_DB: microservices_db
      POSTGRES_USER: microservice_user
      POSTGRES_PASSWORD: 1234
    ports:
      - "5435:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - microservices-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"   # RabbitMQ AMQP protocol
      - "15672:15672" # RabbitMQ Management UI
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin

  eureka-server:
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    container_name: eureka-server
    ports:
      - "8761:8761"
    networks:
      - microservices-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    restart: unless-stopped

  cloud-config-server:
    build:
      context: ./cloud-config-server
      dockerfile: Dockerfile
    container_name: cloud-config-server
    ports:
      - "8888:8888"
    depends_on:
      - postgres
      - eureka-server
    networks:
      - microservices-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka
    command: sh -c "sleep 40 && java -jar /app/app.jar"
    restart: unless-stopped

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    ports:
      - "8081:8081"
    depends_on:
      - postgres
      - eureka-server
      - cloud-config-server
    networks:
      - microservices-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
#      - SPRING_DATASOURCE_URL=jdbc:postgresql://host.docker.internal:5435/user_service #setting connection DB localhost
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/user_service
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka
      - SPRING_CONFIG_IMPORT=optional:configserver:http://cloud-config-server:8888
    command: sh -c "sleep 70 && java -jar /app/app.jar"
    restart: unless-stopped

  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    container_name: order-service
    ports:
      - "8082:8082"
    depends_on:
      - postgres
      - eureka-server
      - cloud-config-server
    networks:
      - microservices-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
#      - SPRING_DATASOURCE_URL=jdbc:postgresql://host.docker.internal:5435/order_service
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/order_service
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka
      - SPRING_CONFIG_IMPORT=optional:configserver:http://cloud-config-server:8888
    command: sh -c "sleep 70 && java -jar /app/app.jar"
    restart: unless-stopped

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "8080:8080"
    depends_on:
      - eureka-server
      - cloud-config-server
    networks:
      - microservices-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka
      - SPRING_CONFIG_IMPORT=optional:configserver:http://cloud-config-server:8888
    command: sh -c "sleep 70 && java -jar /app/app.jar"
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  microservices-network:
    name: microservices-network
    driver: bridge